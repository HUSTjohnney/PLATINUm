PROBLEM GECKO_Problem (DOMAIN GECKO_Domain) 
{
	f0 <fact> TM_ModuleActivity1.module_activity1.Idle() AT [0, 0] [0, +INF] [1, +INF];
	
	f1 <fact> TM_Engine.engine_main.Off() AT [0, 0] [0, +INF] [1, +INF];
	
	f2 <fact> TM_Unit1_Status.unit1_status.Idle() AT [0, 0]Ê[0, +INF]Ê[1, +INF];
	f3 <fact> TM_Unit2_Status.unit2_status.Idle() AT [0, 0]Ê[0, +INF]Ê[1, +INF];
	f4 <fact> TM_Unit3_Status.unit3_status.Idle() AT [0, 0]Ê[0, +INF]Ê[1, +INF];
	
	f5 <fact> TM_Unit1_Cross.unit1_cross.Down() AT [0, 0]Ê[0, +INF]Ê[1, +INF];
	f6 <fact> TM_Unit2_Cross.unit2_cross.Down() AT [0, 0]Ê[0, +INF]Ê[1, +INF];
	f7 <fact> TM_Unit3_Cross.unit3_cross.Down() AT [0, 0]Ê[0, +INF]Ê[1, +INF];
	
	f8 <fact> TM_Unit1_Engine.unit1_engine.Off() AT [0, 0] [0, +INF] [1, +INF];
	f9 <fact> TM_Unit2_Engine.unit2_engine.Off() AT [0, 0] [0, +INF] [1, +INF];
	f10 <fact> TM_Unit3_Engine.unit3_engine.Off() AT [0, 0] [0, +INF] [1, +INF];
	
	f11 <fact> TM_NeighborPort1.neighbor_port1.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f12 <fact> TM_NeighborPort2.neighbor_port2.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f13 <fact> TM_NeighborPort3.neighbor_port3.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f14 <fact> TM_NeighborPort4.neighbor_port4.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f15 <fact> TM_NeighborPort5.neighbor_port5.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f16 <fact> TM_NeighborPort6.neighbor_port6.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f17 <fact> TM_NeighborPort7.neighbor_port7.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	f18 <fact> TM_NeighborPort8.neighbor_port8.Available() AT [0, 0]Ê[1000, 1000] [1000, 1000];
	
	//g0 <goal> TM_ModuleActivity1.module_activity1.TransportingPallet(?pid0= 0, ?from0= 1, ?to0= 2) AT [10, 10] [1, +INF] [1, +INF];
}