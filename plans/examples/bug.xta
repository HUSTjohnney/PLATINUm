clock plan_clock, R1_clock, R2_clock;
const int H = 200;

process pm ()
{
clock pm_clock;
state 
	start,
	pm1 { plan_clock <= 20 and pm_clock <= 20 },
	pm2 { plan_clock <= 50 and pm_clock <= 40 },
	pm3 { plan_clock <= 100 and pm_clock <= 100 },
	finish;
init pm1;
trans
	start -> pm1 { assign plan_clock := 0, pm_clock := 0 ;},
	pm1 -u-> pm2  { guard plan_clock >= 10 and pm_clock >= 10
			and  R1_clock  >= H + 0;
		    assign pm_clock := 0; },
	pm2 -u-> pm3  { guard plan_clock >= 40 and pm_clock >= 20;
			assign pm_clock := 0,
			 R2_clock  := H ;  },
	pm3 -> finish { guard plan_clock ==100 and pm_clock >= 1; 
			assign pm_clock := 0 ; }
	;
}

process gv ()
{
clock gv_clock;
state 
	start,
	gv1 { plan_clock <= 40 and gv_clock <= 40 },
	gv2 { plan_clock <= 100 and gv_clock <= 100 },
	finish;
init gv1;
trans
	start -> gv1 { assign plan_clock := 0, gv_clock := 0 ;},
	gv1 -u-> gv2  { guard plan_clock >= 10 and gv_clock >= 10;
			assign gv_clock := 0,
			 R1_clock  := H ;  },
	gv2 -> finish { guard plan_clock ==100
			and  R2_clock  >= H + 0;
			assign gv_clock := 0,
			 R1_clock  := H ; }
	;
}

system gv, pm;
