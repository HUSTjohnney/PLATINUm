clock plan_clock, R2_clock, R1_clock;
const int H = 60;

process prima1() {
 clock prima1_clock;
state
	Before {plan_clock <= 0},
	During {plan_clock <= 10 and prima1_clock <= 10 },
	After;
init Before;
trans
	Before -> During { guard plan_clock >= 0; 
		assign prima1_clock :=0 ; },
	During  -> After { guard plan_clock >= 10 and prima1_clock >= 10; 
		assign  R1_clock  := H ; };
}

process prima3() {
 clock prima3_clock;
state
	Before {plan_clock <= 20},
	During {plan_clock <= 30 and prima3_clock <= 10 },
	After;
init Before;
trans
	Before -> During { guard plan_clock >= 20
			and  R1_clock  >= H + 0; 
		assign prima3_clock :=0 ; },
	During  -> After { guard plan_clock >= 30 and prima3_clock >= 10;  };
}


process seconda1() {
 clock seconda1_clock;
state
	Before {plan_clock <= 0},
	During {plan_clock <= 10 and seconda1_clock <= 10 },
	After;
init Before;
trans
	Before -> During { guard plan_clock >= 0; 
		assign seconda1_clock :=0 ; },
	During  -> After { guard plan_clock >= 10 and seconda1_clock >= 10; 
		assign  R2_clock  := H ; };
}

process seconda3() {
 clock seconda3_clock;
state
	Before {plan_clock <= 20},
	During {plan_clock <= 30 and seconda3_clock <= 10 },
	After;
init Before;
trans
	Before -> During { guard plan_clock >= 20
			and  R2_clock  >= H + 0; 
		assign seconda3_clock :=0 ; },
	During  -> After { guard plan_clock >= 30 and seconda3_clock >= 10;  };
}


system prima1, prima3, seconda1, seconda3;
