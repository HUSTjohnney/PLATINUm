/*
Primitive Relations in the input plan:
R1: pointingmode 2 end_before_start[0,100] pointingmode 13
R2: pointingmode 6 end_before_start[0,100] pointingmode 15
R3: pointingmode 4 end_before_start[0,100] pointingmode 17
R4: pointingmode 10 end_before_start[0,100] pointingmode 19
R5: pointingmode 8 end_before_start[0,100] pointingmode 21
R6: window 22 start_before_start[0,100] pointingmode 15
R7: pointingmode 15 end_before_end[0,100] window 22
R8: window 22 start_before_start[0,100] pointingmode 17
R9: pointingmode 17 end_before_end[0,100] window 22
R10: window 22 start_before_start[0,100] pointingmode 19
R11: pointingmode 19 end_before_end[0,100] window 22
R12: window 22 start_before_start[0,100] pointingmode 21
R13: pointingmode 21 end_before_end[0,100] window 22
R14: window 22 start_before_start[0,100] pointingmode 13
R15: pointingmode 13 end_before_end[0,100] window 22
R16: pointingmode 0 end_before_start[0,100] pointingmode 2
R17: pointingmode 0 end_before_start[0,100] pointingmode 4
R18: pointingmode 2 end_before_start[0,100] pointingmode 4
R19: pointingmode 4 end_before_start[0,100] pointingmode 13
R20: pointingmode 0 end_before_start[0,100] pointingmode 6
R21: pointingmode 2 end_before_start[0,100] pointingmode 6
R22: pointingmode 4 end_before_start[0,100] pointingmode 6
R23: pointingmode 0 end_before_start[0,100] pointingmode 8
R24: pointingmode 6 end_before_start[0,100] pointingmode 13
R25: pointingmode 2 end_before_start[0,100] pointingmode 8
R26: pointingmode 13 end_before_start[0,100] pointingmode 15
R27: pointingmode 4 end_before_start[0,100] pointingmode 8
R28: pointingmode 6 end_before_start[0,100] pointingmode 8
R29: pointingmode 8 end_before_start[0,100] pointingmode 13
R30: pointingmode 0 end_before_start[0,100] pointingmode 10
R31: pointingmode 6 end_before_start[0,100] pointingmode 17
R32: pointingmode 13 end_before_start[0,100] pointingmode 21
R33: pointingmode 2 end_before_start[0,100] pointingmode 10
R34: pointingmode 8 end_before_start[0,100] pointingmode 17
R35: pointingmode 15 end_before_start[0,100] pointingmode 21
R36: pointingmode 4 end_before_start[0,100] pointingmode 10
R37: pointingmode 13 end_before_start[0,100] pointingmode 17
R38: pointingmode 6 end_before_start[0,100] pointingmode 10
R39: pointingmode 15 end_before_start[0,100] pointingmode 17
R40: pointingmode 8 end_before_start[0,100] pointingmode 10
R41: pointingmode 17 end_before_start[0,100] pointingmode 19
R42: pointingmode 10 end_before_start[0,100] pointingmode 13
R43: pointingmode 17 end_before_start[0,100] pointingmode 21
R44: pointingmode 19 end_before_start[0,100] pointingmode 21


Warning: the end time of the last token of the variable pointingmode should be (100,100).
Adding an unallcated temporal slot at the end


Warning: the end time of the last token of the variable window should be (100,100).
Adding an unallcated temporal slot at the end

*/

clock plan_clock, R1_clock, R2_clock, R3_clock, R4_clock, R5_clock, R6_clock, R7_clock, R8_clock, R9_clock, R10_clock, R11_clock, R12_clock, R13_clock, R14_clock, R15_clock, R16_clock, R17_clock, R18_clock, R19_clock, R20_clock, R21_clock, R22_clock, R23_clock, R24_clock, R25_clock, R26_clock, R27_clock, R28_clock, R29_clock, R30_clock, R31_clock, R32_clock, R33_clock, R34_clock, R35_clock, R36_clock, R37_clock, R38_clock, R39_clock, R40_clock, R41_clock, R42_clock, R43_clock, R44_clock;
const int H = 200;

process pointingmode ()
{
clock pointingmode_clock;
state 
	start,
	pointingmode0 { plan_clock <= 69 and pointingmode_clock <= 69 },
	pointingmode1 { plan_clock <= 70 and pointingmode_clock <= 1 },
	pointingmode2 { plan_clock <= 73 and pointingmode_clock <= 3 },
	pointingmode3 { plan_clock <= 74 and pointingmode_clock <= 1 },
	pointingmode4 { plan_clock <= 77 and pointingmode_clock <= 3 },
	pointingmode5 { plan_clock <= 78 and pointingmode_clock <= 1 },
	pointingmode6 { plan_clock <= 81 and pointingmode_clock <= 3 },
	pointingmode7 { plan_clock <= 82 and pointingmode_clock <= 1 },
	pointingmode8 { plan_clock <= 85 and pointingmode_clock <= 3 },
	pointingmode9 { plan_clock <= 86 and pointingmode_clock <= 1 },
	pointingmode10 { plan_clock <= 89 and pointingmode_clock <= 3 },
	pointingmode11 { plan_clock <= 90 and pointingmode_clock <= 1 },
	pointingmode12 { plan_clock <= 91 and pointingmode_clock <= 69 },
	pointingmode13 { plan_clock <= 92 and pointingmode_clock <= 8 },
	pointingmode14 { plan_clock <= 93 and pointingmode_clock <= 69 },
	pointingmode15 { plan_clock <= 94 and pointingmode_clock <= 8 },
	pointingmode16 { plan_clock <= 95 and pointingmode_clock <= 69 },
	pointingmode17 { plan_clock <= 96 and pointingmode_clock <= 8 },
	pointingmode18 { plan_clock <= 97 and pointingmode_clock <= 69 },
	pointingmode19 { plan_clock <= 98 and pointingmode_clock <= 8 },
	pointingmode20 { plan_clock <= 99 and pointingmode_clock <= 69 },
	pointingmode21 { plan_clock <= 100 and pointingmode_clock <= 8 },
	pointingmode22 { plan_clock <= 100 },
	finish;
init start;
trans
	start -> pointingmode0 { guard plan_clock==0; },
	pointingmode0 -> pointingmode1  { guard plan_clock >= 1 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0,
			 R30_clock  := H ,
			 R23_clock  := H ,
			 R20_clock  := H ,
			 R17_clock  := H ,
			 R16_clock  := H ;  },
	pointingmode1 -> pointingmode2  { guard plan_clock >= 2 and pointingmode_clock >= 1
			and  R16_clock  >= H + 0 and  R16_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode2 -> pointingmode3  { guard plan_clock >= 5 and pointingmode_clock >= 3;
			assign pointingmode_clock := 0,
			 R33_clock  := H ,
			 R25_clock  := H ,
			 R21_clock  := H ,
			 R18_clock  := H ,
			 R1_clock  := H ;  },
	pointingmode3 -> pointingmode4  { guard plan_clock >= 6 and pointingmode_clock >= 1
			and  R18_clock  >= H + 0 and  R18_clock  <= H + 100
			and  R17_clock  >= H + 0 and  R17_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode4 -> pointingmode5  { guard plan_clock >= 9 and pointingmode_clock >= 3;
			assign pointingmode_clock := 0,
			 R36_clock  := H ,
			 R27_clock  := H ,
			 R22_clock  := H ,
			 R19_clock  := H ,
			 R3_clock  := H ;  },
	pointingmode5 -> pointingmode6  { guard plan_clock >= 10 and pointingmode_clock >= 1
			and  R22_clock  >= H + 0 and  R22_clock  <= H + 100
			and  R21_clock  >= H + 0 and  R21_clock  <= H + 100
			and  R20_clock  >= H + 0 and  R20_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode6 -> pointingmode7  { guard plan_clock >= 13 and pointingmode_clock >= 3;
			assign pointingmode_clock := 0,
			 R38_clock  := H ,
			 R31_clock  := H ,
			 R28_clock  := H ,
			 R24_clock  := H ,
			 R2_clock  := H ;  },
	pointingmode7 -> pointingmode8  { guard plan_clock >= 14 and pointingmode_clock >= 1
			and  R28_clock  >= H + 0 and  R28_clock  <= H + 100
			and  R27_clock  >= H + 0 and  R27_clock  <= H + 100
			and  R25_clock  >= H + 0 and  R25_clock  <= H + 100
			and  R23_clock  >= H + 0 and  R23_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode8 -> pointingmode9  { guard plan_clock >= 17 and pointingmode_clock >= 3;
			assign pointingmode_clock := 0,
			 R40_clock  := H ,
			 R34_clock  := H ,
			 R29_clock  := H ,
			 R5_clock  := H ;  },
	pointingmode9 -> pointingmode10  { guard plan_clock >= 18 and pointingmode_clock >= 1
			and  R40_clock  >= H + 0 and  R40_clock  <= H + 100
			and  R38_clock  >= H + 0 and  R38_clock  <= H + 100
			and  R36_clock  >= H + 0 and  R36_clock  <= H + 100
			and  R33_clock  >= H + 0 and  R33_clock  <= H + 100
			and  R30_clock  >= H + 0 and  R30_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode10 -> pointingmode11  { guard plan_clock >= 21 and pointingmode_clock >= 3;
			assign pointingmode_clock := 0,
			 R42_clock  := H ,
			 R4_clock  := H ;  },
	pointingmode11 -> pointingmode12  { guard plan_clock >= 22 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0; },
	pointingmode12 -> pointingmode13  { guard plan_clock >= 23 and pointingmode_clock >= 1
			and  R42_clock  >= H + 0 and  R42_clock  <= H + 100
			and  R29_clock  >= H + 0 and  R29_clock  <= H + 100
			and  R24_clock  >= H + 0 and  R24_clock  <= H + 100
			and  R19_clock  >= H + 0 and  R19_clock  <= H + 100
			and  R14_clock  >= H + 0 and  R14_clock  <= H + 100
			and  R1_clock  >= H + 0 and  R1_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode13 -u-> pointingmode14  { guard plan_clock >= 24 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0,
			 R37_clock  := H ,
			 R32_clock  := H ,
			 R26_clock  := H ,
			 R15_clock  := H ;  },
	pointingmode14 -> pointingmode15  { guard plan_clock >= 25 and pointingmode_clock >= 1
			and  R26_clock  >= H + 0 and  R26_clock  <= H + 100
			and  R6_clock  >= H + 0 and  R6_clock  <= H + 100
			and  R2_clock  >= H + 0 and  R2_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode15 -u-> pointingmode16  { guard plan_clock >= 26 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0,
			 R39_clock  := H ,
			 R35_clock  := H ,
			 R7_clock  := H ;  },
	pointingmode16 -> pointingmode17  { guard plan_clock >= 27 and pointingmode_clock >= 1
			and  R39_clock  >= H + 0 and  R39_clock  <= H + 100
			and  R37_clock  >= H + 0 and  R37_clock  <= H + 100
			and  R34_clock  >= H + 0 and  R34_clock  <= H + 100
			and  R31_clock  >= H + 0 and  R31_clock  <= H + 100
			and  R8_clock  >= H + 0 and  R8_clock  <= H + 100
			and  R3_clock  >= H + 0 and  R3_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode17 -u-> pointingmode18  { guard plan_clock >= 28 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0,
			 R43_clock  := H ,
			 R41_clock  := H ,
			 R9_clock  := H ;  },
	pointingmode18 -> pointingmode19  { guard plan_clock >= 29 and pointingmode_clock >= 1
			and  R41_clock  >= H + 0 and  R41_clock  <= H + 100
			and  R10_clock  >= H + 0 and  R10_clock  <= H + 100
			and  R4_clock  >= H + 0 and  R4_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode19 -u-> pointingmode20  { guard plan_clock >= 30 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0,
			 R44_clock  := H ,
			 R11_clock  := H ;  },
	pointingmode20 -> pointingmode21  { guard plan_clock >= 31 and pointingmode_clock >= 1
			and  R44_clock  >= H + 0 and  R44_clock  <= H + 100
			and  R43_clock  >= H + 0 and  R43_clock  <= H + 100
			and  R35_clock  >= H + 0 and  R35_clock  <= H + 100
			and  R32_clock  >= H + 0 and  R32_clock  <= H + 100
			and  R12_clock  >= H + 0 and  R12_clock  <= H + 100
			and  R5_clock  >= H + 0 and  R5_clock  <= H + 100;
		    assign pointingmode_clock := 0; },
	pointingmode21 -u-> pointingmode22  { guard plan_clock >= 32 and pointingmode_clock >= 1;
			assign pointingmode_clock := 0,
			 R13_clock  := H ;  },
	pointingmode22 -> finish { guard plan_clock >= 100 and pointingmode_clock >= 0;   }
	;
}

process window ()
{
clock window_clock;
state 
	start,
	window22 { plan_clock <= 100 and window_clock <= 80 },
	window23 { plan_clock <= 100 },
	finish;
init start;
trans
	start -> window22 { guard plan_clock==0; 
			assign  R14_clock  := H ,
			 R12_clock  := H ,
			 R10_clock  := H ,
			 R8_clock  := H ,
			 R6_clock  := H ; },
	window22 -u-> window23  { guard plan_clock >= 32 and window_clock >= 20
			and  R15_clock  >= H + 0 and  R15_clock  <= H + 100
			and  R13_clock  >= H + 0 and  R13_clock  <= H + 100
			and  R11_clock  >= H + 0 and  R11_clock  <= H + 100
			and  R9_clock  >= H + 0 and  R9_clock  <= H + 100
			and  R7_clock  >= H + 0 and  R7_clock  <= H + 100;
		    assign window_clock := 0; },
	window23 -> finish { guard plan_clock >= 100 and window_clock >= 0;   }
	;
}

system window, pointingmode;
